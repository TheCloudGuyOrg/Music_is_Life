{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Infrastucture for Music is Life App",
    "Metadata": {

    },
    "Parameters": {
    
    },
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {
        "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "DeletionPolicy": "Retain",
          "Properties": {
            "BucketEncryption": {
              "ServerSideEncryptionConfiguration": [
                {
                  "ServerSideEncryptionByDefault": {
                    "SSEAlgorithm": "AES256"
                  }
                }
              ]
            },
            "LoggingConfiguration": {
                "DestinationBucketName": "thecloudguy-logs",
                "LogFilePrefix": "Music-is-Life-Bucket/"
            },
            "PublicAccessBlockConfiguration": {
                "BlockPublicAcls" : "true",
                "BlockPublicPolicy" : "true",
                "IgnorePublicAcls" : "true",
                "RestrictPublicBuckets" : "true"
            },
            "LifecycleConfiguration": {
                "Rules": [
                {
                  "Status": "Enabled",
                  "AbortIncompleteMultipartUpload": {
                      "DaysAfterInitiation": 1
                  }
                }]
            }
          }
        },
        "DynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "Artist",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "Artist",
                "KeyType": "HASH"
              }],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "Music-Is-Life",
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true
            },
            "DeletionProtectionEnabled": true
          }  
        }   
      },   
  "Outputs": {
    "S3BucketArn": {
      "Value": {
        "Fn::GetAtt": [
          "S3Bucket",
          "Arn"
        ]
      }
    },
    "S3BucketUrl": {
      "Value": {
        "Fn::GetAtt": [
          "S3Bucket",
          "WebsiteURL"
        ]
      }
    }
  }
}







